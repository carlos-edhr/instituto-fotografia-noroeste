/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    products: Product;
    tags: Tag;
    pages: Page;
    orders: Order;
    reviews: Review;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      subcategories: 'categories';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  username: string;
  name?: string | null;
  image?: (string | null) | Media;
  roles?: ('super-admin' | 'admin' | 'usuario' | 'instructor')[] | null;
  ciudad?: string | null;
  edad?: number | null;
  telefono?: string | null;
  genero?: ('masculino' | 'femenino' | 'otro') | null;
  'fechaDeNacimiento '?: string | null;
  ocupacion?: string | null;
  gradoDeEstudios?: ('secundaria' | 'preparatoria' | 'licenciatura' | 'posgrado' | 'otro') | null;
  comoSeEnteroDeIFN?: string | null;
  marcaDeCamara?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  slug: string;
  color?: string | null;
  parent?: (string | null) | Category;
  subcategories?: {
    docs?: (string | Category)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Creación y gestión de productos
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  user: string | User;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Price in USD
   */
  price: number;
  category?: (string | null) | Category;
  image?: (string | null) | Media;
  /**
   * Protected content only visible to customers after purchase. Add product documentation, downloadable files, getting started guides, and bonus materials. Supports Markdown formatting.
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * If checked, this product will be archived
   */
  isArchived?: boolean | null;
  /**
   * If checked, this product will not be shown on the public storefront
   */
  isPrivate?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name: string;
  products?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug: string;
  status?: ('published' | 'draft') | null;
  layout?:
    | (
        | {
            title: string;
            /**
             * Texto que aparece en rojo (ej: 'Fotografía')
             */
            highlightedText?: string | null;
            subtitle?: string | null;
            backgroundImages?:
              | {
                  image: string | Media;
                  altText?: string | null;
                  id?: string | null;
                }[]
              | null;
            videoSection?: {
              enableVideo?: boolean | null;
              videoFile?: (string | null) | Media;
              /**
               * URL externa del video (opcional si se sube archivo)
               */
              videoUrl?: string | null;
            };
            ctaButton?: {
              enableCta?: boolean | null;
              text?: string | null;
              link?: string | null;
            };
            logoCarousel?: {
              enableLogos?: boolean | null;
              logos?:
                | {
                    logo: string | Media;
                    altText?: string | null;
                    link?: string | null;
                    id?: string | null;
                  }[]
                | null;
            };
            styling?: {
              textColor?: ('white' | 'black' | 'gray') | null;
              /**
               * Porcentaje de opacidad (0-100)
               */
              overlayOpacity?: number | null;
              minHeight?: ('screen' | '75' | '50') | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            richText: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            width?: ('narrow' | 'medium' | 'wide' | 'full') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            media: string | Media;
            caption?: string | null;
            alignment?: ('left' | 'center' | 'right') | null;
            size?: ('small' | 'medium' | 'large' | 'full') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'media';
          }
        | {
            header: {
              badge?: string | null;
              title: string;
              subtitle?: string | null;
              description?: string | null;
            };
            courseInfo?: {
              startDate?: string | null;
              schedule?: string | null;
              instructor?: {
                name?: string | null;
                link?: string | null;
              };
              price?: string | null;
              paymentDescription?: string | null;
            };
            syllabus?:
              | {
                  item: string;
                  id?: string | null;
                }[]
              | null;
            requirements?:
              | {
                  requirement: string;
                  id?: string | null;
                }[]
              | null;
            paymentMethods?: {
              bankTransfer?: {
                bankName?: string | null;
                accountHolder?: string | null;
                accountNumber?: string | null;
                clabe?: string | null;
              };
              oxxo?: {
                cardNumber?: string | null;
              };
              paypal?: {
                link?: string | null;
              };
              zelle?: {
                email?: string | null;
                name?: string | null;
              };
            };
            location?: {
              mapEmbed?: string | null;
              address?: string | null;
            };
            additionalInfo?: {
              duration?: string | null;
              sessions?: string | null;
              includes?: string | null;
            };
            enrollmentLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'curso-uno';
          }
        | {
            header: {
              badge?: string | null;
              title: string;
              subtitle?: string | null;
              description?: string | null;
            };
            quickInfo?:
              | {
                  icon: 'calendar' | 'clock' | 'user' | 'creditcard';
                  title: string;
                  description: string;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            mainContent?: {
              duration?: string | null;
              durationDetails?: string | null;
              includes?:
                | {
                    item: string;
                    id?: string | null;
                  }[]
                | null;
              price?: string | null;
              instructorName?: string | null;
              instructorLink?: string | null;
            };
            syllabus?:
              | {
                  item: string;
                  id?: string | null;
                }[]
              | null;
            requirements?:
              | {
                  requirement: string;
                  id?: string | null;
                }[]
              | null;
            paymentMethods?: {
              bankTransfer?: {
                bankName?: string | null;
                accountHolder?: string | null;
                accountNumber?: string | null;
                clabe?: string | null;
              };
              oxxo?: {
                cardNumber?: string | null;
              };
              paypal?: {
                link?: string | null;
              };
              zelle?: {
                email?: string | null;
                name?: string | null;
              };
            };
            location?: {
              mapEmbed?: string | null;
              venue?: string | null;
              address?: string | null;
            };
            enrollmentLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'curso-dos';
          }
        | {
            header: {
              badge?: string | null;
              title: string;
              subtitle?: string | null;
              description?: string | null;
            };
            instructor?: {
              name?: string | null;
              link?: string | null;
            };
            courseInfo?: {
              price?: string | null;
              paymentDescription?: string | null;
              startDate?: string | null;
              schedule?: string | null;
              duration?: string | null;
              endDate?: string | null;
            };
            syllabus?:
              | {
                  item: string;
                  id?: string | null;
                }[]
              | null;
            learningPoints?:
              | {
                  point: string;
                  id?: string | null;
                }[]
              | null;
            paymentMethods?: {
              bankTransfer?: {
                bankName?: string | null;
                accountHolder?: string | null;
                accountNumber?: string | null;
                clabe?: string | null;
              };
              oxxo?: {
                cardNumber?: string | null;
              };
              paypal?: {
                link?: string | null;
              };
              zelle?: {
                email?: string | null;
                name?: string | null;
              };
            };
            location?: {
              mapEmbed?: string | null;
              venue?: string | null;
              address?: string | null;
            };
            enrollmentLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'curso-tres';
          }
        | {
            header: {
              badge?: string | null;
              title: string;
              subtitle?: string | null;
              description?: string | null;
            };
            galleryItems?:
              | {
                  image: string | Media;
                  title: string;
                  description?: string | null;
                  year?: number | null;
                  courseName?: string | null;
                  id?: string | null;
                }[]
              | null;
            pagination?: {
              itemsPerPageDesktop?: number | null;
              itemsPerPageMobile?: number | null;
            };
            footerText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'galeria';
          }
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  name: string;
  user: string | User;
  product: string | Product;
  /**
   * Checkout session associated with the order
   */
  stripeCheckoutSessionId: string;
  /**
   * Stripe account associated with the order
   */
  stripeAccountId?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  description: string;
  rating: number;
  product: string | Product;
  user: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'reviews';
        value: string | Review;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  username?: T;
  name?: T;
  image?: T;
  roles?: T;
  ciudad?: T;
  edad?: T;
  telefono?: T;
  genero?: T;
  'fechaDeNacimiento '?: T;
  ocupacion?: T;
  gradoDeEstudios?: T;
  comoSeEnteroDeIFN?: T;
  marcaDeCamara?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  color?: T;
  parent?: T;
  subcategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  user?: T;
  description?: T;
  price?: T;
  category?: T;
  image?: T;
  content?: T;
  isArchived?: T;
  isPrivate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              title?: T;
              highlightedText?: T;
              subtitle?: T;
              backgroundImages?:
                | T
                | {
                    image?: T;
                    altText?: T;
                    id?: T;
                  };
              videoSection?:
                | T
                | {
                    enableVideo?: T;
                    videoFile?: T;
                    videoUrl?: T;
                  };
              ctaButton?:
                | T
                | {
                    enableCta?: T;
                    text?: T;
                    link?: T;
                  };
              logoCarousel?:
                | T
                | {
                    enableLogos?: T;
                    logos?:
                      | T
                      | {
                          logo?: T;
                          altText?: T;
                          link?: T;
                          id?: T;
                        };
                  };
              styling?:
                | T
                | {
                    textColor?: T;
                    overlayOpacity?: T;
                    minHeight?: T;
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              richText?: T;
              width?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              media?: T;
              caption?: T;
              alignment?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        'curso-uno'?:
          | T
          | {
              header?:
                | T
                | {
                    badge?: T;
                    title?: T;
                    subtitle?: T;
                    description?: T;
                  };
              courseInfo?:
                | T
                | {
                    startDate?: T;
                    schedule?: T;
                    instructor?:
                      | T
                      | {
                          name?: T;
                          link?: T;
                        };
                    price?: T;
                    paymentDescription?: T;
                  };
              syllabus?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              requirements?:
                | T
                | {
                    requirement?: T;
                    id?: T;
                  };
              paymentMethods?:
                | T
                | {
                    bankTransfer?:
                      | T
                      | {
                          bankName?: T;
                          accountHolder?: T;
                          accountNumber?: T;
                          clabe?: T;
                        };
                    oxxo?:
                      | T
                      | {
                          cardNumber?: T;
                        };
                    paypal?:
                      | T
                      | {
                          link?: T;
                        };
                    zelle?:
                      | T
                      | {
                          email?: T;
                          name?: T;
                        };
                  };
              location?:
                | T
                | {
                    mapEmbed?: T;
                    address?: T;
                  };
              additionalInfo?:
                | T
                | {
                    duration?: T;
                    sessions?: T;
                    includes?: T;
                  };
              enrollmentLink?: T;
              id?: T;
              blockName?: T;
            };
        'curso-dos'?:
          | T
          | {
              header?:
                | T
                | {
                    badge?: T;
                    title?: T;
                    subtitle?: T;
                    description?: T;
                  };
              quickInfo?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    link?: T;
                    id?: T;
                  };
              mainContent?:
                | T
                | {
                    duration?: T;
                    durationDetails?: T;
                    includes?:
                      | T
                      | {
                          item?: T;
                          id?: T;
                        };
                    price?: T;
                    instructorName?: T;
                    instructorLink?: T;
                  };
              syllabus?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              requirements?:
                | T
                | {
                    requirement?: T;
                    id?: T;
                  };
              paymentMethods?:
                | T
                | {
                    bankTransfer?:
                      | T
                      | {
                          bankName?: T;
                          accountHolder?: T;
                          accountNumber?: T;
                          clabe?: T;
                        };
                    oxxo?:
                      | T
                      | {
                          cardNumber?: T;
                        };
                    paypal?:
                      | T
                      | {
                          link?: T;
                        };
                    zelle?:
                      | T
                      | {
                          email?: T;
                          name?: T;
                        };
                  };
              location?:
                | T
                | {
                    mapEmbed?: T;
                    venue?: T;
                    address?: T;
                  };
              enrollmentLink?: T;
              id?: T;
              blockName?: T;
            };
        'curso-tres'?:
          | T
          | {
              header?:
                | T
                | {
                    badge?: T;
                    title?: T;
                    subtitle?: T;
                    description?: T;
                  };
              instructor?:
                | T
                | {
                    name?: T;
                    link?: T;
                  };
              courseInfo?:
                | T
                | {
                    price?: T;
                    paymentDescription?: T;
                    startDate?: T;
                    schedule?: T;
                    duration?: T;
                    endDate?: T;
                  };
              syllabus?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              learningPoints?:
                | T
                | {
                    point?: T;
                    id?: T;
                  };
              paymentMethods?:
                | T
                | {
                    bankTransfer?:
                      | T
                      | {
                          bankName?: T;
                          accountHolder?: T;
                          accountNumber?: T;
                          clabe?: T;
                        };
                    oxxo?:
                      | T
                      | {
                          cardNumber?: T;
                        };
                    paypal?:
                      | T
                      | {
                          link?: T;
                        };
                    zelle?:
                      | T
                      | {
                          email?: T;
                          name?: T;
                        };
                  };
              location?:
                | T
                | {
                    mapEmbed?: T;
                    venue?: T;
                    address?: T;
                  };
              enrollmentLink?: T;
              id?: T;
              blockName?: T;
            };
        galeria?:
          | T
          | {
              header?:
                | T
                | {
                    badge?: T;
                    title?: T;
                    subtitle?: T;
                    description?: T;
                  };
              galleryItems?:
                | T
                | {
                    image?: T;
                    title?: T;
                    description?: T;
                    year?: T;
                    courseName?: T;
                    id?: T;
                  };
              pagination?:
                | T
                | {
                    itemsPerPageDesktop?: T;
                    itemsPerPageMobile?: T;
                  };
              footerText?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  name?: T;
  user?: T;
  product?: T;
  stripeCheckoutSessionId?: T;
  stripeAccountId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  description?: T;
  rating?: T;
  product?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        label: string;
        link: string;
        type?: ('internal' | 'external' | 'section') | null;
        id?: string | null;
      }[]
    | null;
  ctaButton?: {
    enable?: boolean | null;
    text?: string | null;
    link?: string | null;
  };
  logo: string | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  columns?:
    | {
        title?: string | null;
        links?:
          | {
              label: string;
              link: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  socialLinks?:
    | {
        platform: 'instagram' | 'facebook' | 'twitter' | 'youtube' | 'linkedin';
        url: string;
        id?: string | null;
      }[]
    | null;
  copyright: string;
  logo?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        label?: T;
        link?: T;
        type?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        enable?: T;
        text?: T;
        link?: T;
      };
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              link?: T;
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  copyright?: T;
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}